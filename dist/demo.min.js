"use strict";(self.webpackChunksigma_plus=self.webpackChunksigma_plus||[]).push([[577],{8241:(e,t,n)=>{var a=n(698);function o(e,t=0){let n;return function(...a){clearTimeout(n),n=setTimeout((()=>e.apply(this,a)),t)}}("example.json",fetch("example.json",undefined).then((function(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);if(204!==e.status&&205!==e.status)return e.json()}))).then((e=>{e.nodes.forEach((e=>{1===e.attributes.level&&(e.attributes.type="border"),0===e.attributes.level&&(e.attributes.type="image",e.attributes.image="./wikipedia.svg")})),e.edges.forEach((e=>{e.attributes.weight=Math.floor(4*Math.random()+1)}));const t=window.sigmaPlus=new a.default({data:e,container:"main",tooltipFormatter:e=>`\n          <div><strong>${e.label}</strong></div>\n          <div style="border-top: 1px solid #ebebeb; margin-top: 5px;">\n            <small>Nível: <strong>${e.level}</strong>${e.seed?" (seed)":""}</small>\n          </div>\n        `});t.on("selectNode",(e=>{console.log("[demo.min.js] selectedNode:",e)}));const n={renderEdges:t.getSetting("renderEdges"),renderLabels:t.getSetting("renderLabels"),minNodeSize:t.getSetting("minNodeSize"),maxNodeSize:t.getSetting("maxNodeSize"),minEdgeSize:t.getSetting("minEdgeSize"),maxEdgeSize:t.getSetting("maxEdgeSize"),zoomIn:()=>{t.zoomIn()},zoomOut:()=>{t.zoomOut()},resetCamera:()=>{t.resetCamera()},focus:()=>{t.focusNode("data visualization",!0)},select:()=>{t.selectNode("data profiling"),t.focusNode("data profiling")}},d=new dat.GUI({name:"graph"});d.width=300;const s=d.addFolder("Rendering");s.add(n,"renderLabels").name("Show labels").onChange((e=>{t.setSetting("renderLabels",e)})),s.add(n,"renderEdges").name("Show edges").onChange((e=>{t.setSetting("renderEdges",e)})),s.add(n,"minNodeSize",2,10,1).name("Node size (min)").onChange((e=>{o(t.setSetting,500)("minNodeSize",e)})),s.add(n,"maxNodeSize",5,50,1).name("Node size (max)").onChange((e=>{o(t.setSetting,500)("maxNodeSize",e)})),s.add(n,"minEdgeSize",1,5,1).name("Edge size (min)").onChange((e=>{o(t.setSetting,500)("minEdgeSize",e)})),s.add(n,"maxEdgeSize",1,10,1).name("Edge size (max)").onChange((e=>{o(t.setSetting,500)("maxEdgeSize",e)})),s.open();const i=d.addFolder("Controls");i.add(n,"zoomIn").name("Zoom in +"),i.add(n,"zoomOut").name("Zoom out −"),i.add(n,"resetCamera").name("Reset camera"),i.add(n,"focus").name("Focus test"),i.add(n,"select").name("Select test"),i.open()})).catch((e=>{console.error("Erro na leitura dos dados JSON:",e)}))}},e=>{e(e.s=8241)}]);